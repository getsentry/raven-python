#!/usr/bin/env python

import glob
import os
import sys

os.environ['PYFLAKES_NODOCTEST'] = '1'

# pycodestyle.py uses sys.argv to find setup.cfg
sys.argv = [os.path.join(os.path.dirname(__file__), os.pardir, os.pardir)]

# git usurbs your bin path for hooks and will always run system python
if 'VIRTUAL_ENV' in os.environ:
    site_packages = glob.glob(
        '%s/lib/*/site-packages' % os.environ['VIRTUAL_ENV'])[0]
    sys.path.insert(0, site_packages)


def main():
    from flake8.main.git import find_modified_files
    from flake8.api.legacy import get_style_guide

    files_modified = find_modified_files(False)

    try:
        text_type = unicode
    except NameError:
        text_type = str

    files_modified = [text_type(x) for x in files_modified]

    # remove non-py files and files which no longer exist
    files_modified = filter(
        lambda x: x.endswith('.py') and os.path.exists(x),
        files_modified)

    flake8_style = get_style_guide(parse_argv=True)
    report = flake8_style.check_files(files_modified)

    return report.total_errors

if __name__ == '__main__':
    sys.exit(main())
